//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://Microsoft.ServiceModel.Samples", ClrNamespace="microsoft.servicemodel.samples")]

namespace microsoft.servicemodel.samples
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteFileInfo", Namespace="http://Microsoft.ServiceModel.Samples")]
    public partial class RemoteFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BytesLengthField;
        
        private byte[] BytesReadField;
        
        private long NextPositionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BytesLength
        {
            get
            {
                return this.BytesLengthField;
            }
            set
            {
                this.BytesLengthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BytesRead
        {
            get
            {
                return this.BytesReadField;
            }
            set
            {
                this.BytesReadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NextPosition
        {
            get
            {
                return this.NextPositionField;
            }
            set
            {
                this.NextPositionField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="IFileTransferService")]
public interface IFileTransferService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFileTransferService/DownloadFile", ReplyAction="http://Microsoft.ServiceModel.Samples/IFileTransferService/DownloadFileResponse")]
    microsoft.servicemodel.samples.RemoteFileInfo DownloadFile(string fileName, long position, int numBytes);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/IFileTransferService/DownloadFile", ReplyAction="http://Microsoft.ServiceModel.Samples/IFileTransferService/DownloadFileResponse")]
    System.IAsyncResult BeginDownloadFile(string fileName, long position, int numBytes, System.AsyncCallback callback, object asyncState);
    
    microsoft.servicemodel.samples.RemoteFileInfo EndDownloadFile(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IFileTransferServiceChannel : IFileTransferService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public microsoft.servicemodel.samples.RemoteFileInfo Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((microsoft.servicemodel.samples.RemoteFileInfo)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class FileTransferServiceClient : System.ServiceModel.ClientBase<IFileTransferService>, IFileTransferService
{
    
    private BeginOperationDelegate onBeginDownloadFileDelegate;
    
    private EndOperationDelegate onEndDownloadFileDelegate;
    
    private System.Threading.SendOrPostCallback onDownloadFileCompletedDelegate;
    
    public FileTransferServiceClient()
    {
    }
    
    public FileTransferServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public FileTransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FileTransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FileTransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public event System.EventHandler<DownloadFileCompletedEventArgs> DownloadFileCompleted;
    
    public microsoft.servicemodel.samples.RemoteFileInfo DownloadFile(string fileName, long position, int numBytes)
    {
        return base.Channel.DownloadFile(fileName, position, numBytes);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginDownloadFile(string fileName, long position, int numBytes, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDownloadFile(fileName, position, numBytes, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public microsoft.servicemodel.samples.RemoteFileInfo EndDownloadFile(System.IAsyncResult result)
    {
        return base.Channel.EndDownloadFile(result);
    }
    
    private System.IAsyncResult OnBeginDownloadFile(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string fileName = ((string)(inValues[0]));
        long position = ((long)(inValues[1]));
        int numBytes = ((int)(inValues[2]));
        return this.BeginDownloadFile(fileName, position, numBytes, callback, asyncState);
    }
    
    private object[] OnEndDownloadFile(System.IAsyncResult result)
    {
        microsoft.servicemodel.samples.RemoteFileInfo retVal = this.EndDownloadFile(result);
        return new object[] {
                retVal};
    }
    
    private void OnDownloadFileCompleted(object state)
    {
        if ((this.DownloadFileCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DownloadFileAsync(string fileName, long position, int numBytes)
    {
        this.DownloadFileAsync(fileName, position, numBytes, null);
    }
    
    public void DownloadFileAsync(string fileName, long position, int numBytes, object userState)
    {
        if ((this.onBeginDownloadFileDelegate == null))
        {
            this.onBeginDownloadFileDelegate = new BeginOperationDelegate(this.OnBeginDownloadFile);
        }
        if ((this.onEndDownloadFileDelegate == null))
        {
            this.onEndDownloadFileDelegate = new EndOperationDelegate(this.OnEndDownloadFile);
        }
        if ((this.onDownloadFileCompletedDelegate == null))
        {
            this.onDownloadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadFileCompleted);
        }
        base.InvokeAsync(this.onBeginDownloadFileDelegate, new object[] {
                    fileName,
                    position,
                    numBytes}, this.onEndDownloadFileDelegate, this.onDownloadFileCompletedDelegate, userState);
    }
}
